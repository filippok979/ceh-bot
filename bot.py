import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram import F
from datetime import datetime

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìÅ –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã")],
        [KeyboardButton(text="üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")],
        [KeyboardButton(text="ü™µ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞")],
        [KeyboardButton(text="üí¨ –í–æ–ø—Ä–æ—Å –º–∞—Å—Ç–µ—Ä—É")]
    ],
    resize_keyboard=True
)

async def send_long_message(chat_id: str, text: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Å—Ç—è–º–∏"""
    max_length = 4000  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    
    if len(text) <= max_length:
        await bot.send_message(chat_id, text)
    else:
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
        for i in range(0, len(text), max_length):
            part = text[i:i + max_length]
            await bot.send_message(chat_id, part)
            await asyncio.sleep(0.5)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏

async def notify_admin(message_text: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É"""
    try:
        await send_long_message(ADMIN_CHAT_ID, message_text)
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É: {e}")

@dp.message(F.text == "/start")
async def start(message: types.Message):
    user = message.from_user
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¶–ï–• üõ†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=main_kb)
    
    user_info = f"üë§ {user.full_name} (@{user.username})" if user.username else f"üë§ {user.full_name}"
    await notify_admin(
        f"üÜï –ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨!\n"
        f"{user_info}\n"
        f"üÜî ID: {user.id}\n"
        f"‚è∞ {datetime.now().strftime('%H:%M %d.%m.%Y')}"
    )

@dp.message(F.text == "üìÅ –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã")
async def works(message: types.Message):
    await message.answer("üõ†Ô∏è –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã: https://disk.yandex.ru/d/IeeV4DCkWstadw", reply_markup=main_kb)
    await notify_admin(f"üìÅ {message.from_user.full_name} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã")

@dp.message(F.text == "üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
async def calculate(message: types.Message):
    await message.answer("üìê –†–∞—Å—á–µ—Ç: 8-903-656-34-80 @filippovceh", reply_markup=main_kb)
    await notify_admin(
        f"üö® –ó–ê–ü–†–û–° –†–ê–°–ß–ï–¢–ê!\n"
        f"üë§ {message.from_user.full_name}\n"
        f"‚è∞ {datetime.now().strftime('%H:%M %d.%m.%Y')}"
    )

@dp.message(F.text == "ü™µ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞")
async def materials(message: types.Message):
    await message.answer("üè∑Ô∏è –õ–î–°–ü Lamarty, Egger ‚Ä¢ –ö—Ä–æ–º–∫–∞ Rehau ‚Ä¢ –§—É—Ä–Ω–∏—Ç—É—Ä–∞ Blum", reply_markup=main_kb)
    await notify_admin(f"ü™µ {message.from_user.full_name} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –º–∞—Ç–µ—Ä–∏–∞–ª—ã")

@dp.message(F.text == "üí¨ –í–æ–ø—Ä–æ—Å –º–∞—Å—Ç–µ—Ä—É")
async def contact(message: types.Message):
    await message.answer("üë®‚Äçüîß –ö–æ–Ω—Ç–∞–∫—Ç—ã: 8-903-656-34-80 @filippovceh", reply_markup=main_kb)
    await notify_admin(
        f"üö® –ó–ê–ü–†–û–° –ö–û–ù–¢–ê–ö–¢–ê!\n"
        f"üë§ {message.from_user.full_name}\n"
        f"‚è∞ {datetime.now().strftime('%H:%M %d.%m.%Y')}"
    )

@dp.message()
async def handle_other_messages(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –õ–Æ–ë–´–• –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ü–û–õ–ù–´–ú —Ç–µ–∫—Å—Ç–æ–º"""
    user = message.from_user
    text = message.text or "üì∑ [—Ñ–æ—Ç–æ/—Ñ–∞–π–ª/—Å—Ç–∏–∫–µ—Ä]"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é üëá", reply_markup=main_kb)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ü–û–õ–ù–û–ï —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    user_info = f"üë§ {user.full_name} (@{user.username})" if user.username else f"üë§ {user.full_name}"
    
    full_notification = (
        f"üí¨ –ü–û–õ–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
        f"{user_info}\n"
        f"üÜî ID: {user.id}\n"
        f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M %d.%m.%Y')}\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
        f"üìù –¢–ï–ö–°–¢ –°–û–û–ë–©–ï–ù–ò–Ø:\n"
        f"{text}\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
        f"–î–ª–∏–Ω–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤"
    )
    
    await notify_admin(full_notification)

async def main():
    print("üöÄ –ë–æ—Ç –¶–ï–• –∑–∞–ø—É—â–µ–Ω!")
    await notify_admin("‚úÖ –ë–æ—Ç –¶–ï–• –∑–∞–ø—É—â–µ–Ω! –¢–µ–ø–µ—Ä—å –ø—Ä–∏—Ö–æ–¥—è—Ç –ü–û–õ–ù–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
